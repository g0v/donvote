// Generated by LiveScript 1.2.0
var x$;
x$ = angular.module('donvote');
x$.directive('accordion', function($compile, $timeout){
  return {
    restrict: 'E',
    replace: true,
    transclude: true,
    template: "<div style='overflow:hidden;height:0;' ng-transclude></div>",
    scope: {
      expand: '=ngExpand'
    },
    link: function(s, e, a){
      var cog;
      cog = [['auto', '0', 'visible', '1'], ['0', 'auto', 'hidden', '0.5']];
      console.log(a['ngExpand'], e.height());
      return s.$watch('expand', function(v){
        var c, r;
        if (typeof v !== "undefined") {
          c = v
            ? cog[0]
            : cog[1];
          e.height(c[0]);
          r = e.height();
          e.height(c[1]);
          console.log(a['ngExpand'], c[0], r, c[2]);
          e.css({
            overflow: c[2]
          });
          return e.animate({
            opacity: c[3],
            height: r
          }, function(){
            return e.css({
              height: c[0],
              opacity: c[3],
              overflow: c[2]
            });
          });
        }
      });
    }
  };
});
x$.directive('timedelta', function($compile){
  return {
    restrict: 'E',
    replace: true,
    transclude: true,
    template: "<div class='timedelta'>" + "<input class='form-control day' type='text'>" + "<span>天</span> " + "<input class='form-control hour' type='text'>" + "<span>時</span> " + "<input class='form-control minute' type='text'>" + "<span>分</span> " + "</div>",
    scope: {
      model: '=ngModel',
      disabled: '=ngDisabled'
    },
    link: function(s, e, a){
      var ref$, d, h, m, updateModel;
      ref$ = ['day', 'hour', 'minute'].map(function(it){
        return e.find("." + it);
      }), d = ref$[0], h = ref$[1], m = ref$[2];
      updateModel = function(){
        return s.model = (d.val() * 86400 + h.val() * 3600 + m.val() * 60) * 1000;
      };
      if (a['ngModel']) {
        [d, h, m].map(function(it){
          return it.on('change', function(){
            return updateModel();
          });
        });
        s.$watch('disabled', function(){
          return [d, h, m].map(function(it){
            return it.prop('disabled', s.disabled) || false;
          });
        });
        return s.$watch('model', function(v){
          if (v) {
            v /= 1000;
            d.val(parseInt(v / 86400));
            h.val(parseInt((v % 86400) / 3600));
            return m.val(parseInt((v % 3600) / 60));
          }
        });
      }
    }
  };
});